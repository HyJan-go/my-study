<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">
    <!-- 配置整合mybatis过程 -->
    <!-- 1.配置数据库相关参数properties的属性：${url} -->
    <!--<context:property-placeholder location="classpath:jdbc.properties" />-->

    <!-- 2.数据库连接池 -->
    <!-- 配置数据源，记得去掉myBatis-config.xml的数据源相关配置 -->
    <!-- 这里是在原始的基础上添加了druid数据库连接池，来监控。 -->
    <!-- 注意 ：driverClassName,url,username,password 这几个值是固定的，由bean class决定的 -->
    <!--<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">-->
        <!--<property name="driverClassName" value="${mysql_driverClassName}" />-->
        <!--<property name="url" value="${mysql_url}" />-->
        <!--<property name="username" value="${mysql_username}" />-->
        <!--<property name="password" value="${mysql_password}" />-->

        <!--&lt;!&ndash; 配置初始化大小、最小、最大 &ndash;&gt;-->
        <!--<property name="initialSize" value="${druid_initialSize}" />-->
        <!--<property name="minIdle" value="${druid_minIdle}" />-->
        <!--<property name="maxActive" value="${druid_maxActive}" />-->

        <!--&lt;!&ndash; 配置获取连接等待超时的时间 &ndash;&gt;-->
        <!--<property name="maxWait" value="${druid_maxWait}" />-->

        <!--&lt;!&ndash; 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 &ndash;&gt;-->
        <!--<property name="timeBetweenEvictionRunsMillis" value="${druid_timeBetweenEvictionRunsMillis}" />-->

        <!--&lt;!&ndash; 配置一个连接在池中最小生存的时间，单位是毫秒 &ndash;&gt;-->
        <!--<property name="minEvictableIdleTimeMillis" value="${druid_minEvictableIdleTimeMillis}" />-->

        <!--<property name="testWhileIdle" value="true" />-->

        <!--&lt;!&ndash; 这里建议配置为TRUE，防止取到的连接不可用 &ndash;&gt;-->
        <!--<property name="testOnBorrow" value="true" />-->
        <!--<property name="testOnReturn" value="false" />-->

        <!--&lt;!&ndash; 打开PSCache，并且指定每个连接上PSCache的大小 &ndash;&gt;-->
        <!--<property name="poolPreparedStatements" value="true" />-->
        <!--<property name="maxPoolPreparedStatementPerConnectionSize"-->
                  <!--value="20" />-->

        <!--<property name="removeAbandoned" value="true" />-->
        <!--<property name="removeAbandonedTimeout" value="1800" />-->

        <!--&lt;!&ndash; 配置监控统计拦截的filters，去掉后监控界面sql无法统计 &ndash;&gt;-->
        <!--<property name="filters" value="stat" />-->
    <!--</bean>-->

    <!-- 3.配置SqlSessionFactory对象 -->
    <!--<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">-->
        <!--&lt;!&ndash; 注入数据库连接池 &ndash;&gt;-->
        <!--<property name="dataSource" ref="dataSource" />-->
        <!--&lt;!&ndash; 配置MyBaties全局配置文件:mybatis-config.xml &ndash;&gt;-->
        <!--<property name="configLocation" value="classpath:mybatis/mybatis-config.xml" />-->
        <!--&lt;!&ndash; 扫描entity包 使用别名 &ndash;&gt;-->
        <!--<property name="typeAliasesPackage" value="com.fuzhu.entity" />-->
        <!--&lt;!&ndash; 扫描sql配置文件:mapper需要的xml文件 &ndash;&gt;-->
        <!--&lt;!&ndash;<property name="mapperLocations" value="classpath:mapper/*.xml" />&ndash;&gt;-->
    <!--</bean>-->

    <!--&lt;!&ndash; 4.配置扫描Dao接口包，动态实现Dao接口，注入到spring容器中 &ndash;&gt;-->
    <!--<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">-->
        <!--&lt;!&ndash; 注入sqlSessionFactory &ndash;&gt;-->
        <!--<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />-->
        <!--&lt;!&ndash; 给出需要扫描Dao接口包 &ndash;&gt;-->
        <!--<property name="basePackage" value="com.fuzhu.dao" />-->
    <!--</bean>-->

</beans>